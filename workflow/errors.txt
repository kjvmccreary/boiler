PS C:\Users\mccre\dev\boiler\src\frontend\react-app> npm run test:workflow:operations

> microservices-frontend@0.0.0 test:workflow:operations
> vitest run src/features/workflow/tests/operations --config vitest.config.js

 Vitest  "deps.inline" is deprecated. If you rely on vite-node directly, use "server.deps.inline" instead. Otherwise, consider using "deps.optimizer.web.include"

 RUN  v1.6.1 C:/Users/mccre/dev/boiler/src/frontend/react-app

stdout | new ApiClient (C:\Users\mccre\dev\boiler\src\frontend\react-app\src\services\api.client.ts:20:13)
🔍 API CLIENT: Creating axios instance with baseURL: empty (using Vite proxy)

stdout | new ApiClient (C:\Users\mccre\dev\boiler\src\frontend\react-app\src\services\api.client.ts:21:13)
🔍 API CLIENT: Expected proxy config:

stdout | new ApiClient (C:\Users\mccre\dev\boiler\src\frontend\react-app\src\services\api.client.ts:22:13)
  - /api/auth/* → AuthService (port 7001)

stdout | new ApiClient (C:\Users\mccre\dev\boiler\src\frontend\react-app\src\services\api.client.ts:23:13)
  - /api/* → UserService (port 7002)

stdout | src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > lists tasks
🏢 API CLIENT: Tenant context cleared (using JWT for tenant context)
🔍 AuthContext: Initializing authentication...
🔍 TokenManager: No token found
🔍 TokenManager: Refresh token info: { hasRefreshToken: false, refreshTokenLength: undefined }
🔍 AuthContext: Token check: { hasToken: false, hasRefreshToken: false, tokenExpired: 'no-token' }
🔍 AuthContext: No token found, user not authenticated

stdout | src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > lists tasks
🏢 API CLIENT: Tenant context cleared (using JWT for tenant context)
🔍 AuthContext: Initializing authentication...
🔍 TokenManager: No token found
🔍 TokenManager: Refresh token info: { hasRefreshToken: false, refreshTokenLength: undefined }
🔍 AuthContext: Token check: { hasToken: false, hasRefreshToken: false, tokenExpired: 'no-token' }
🔍 AuthContext: No token found, user not authenticated

stdout | src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > claim then complete flow
🏢 API CLIENT: Tenant context cleared (using JWT for tenant context)
🔍 AuthContext: Initializing authentication...
🔍 TokenManager: No token found
🔍 TokenManager: Refresh token info: { hasRefreshToken: false, refreshTokenLength: undefined }
🔍 AuthContext: Token check: { hasToken: false, hasRefreshToken: false, tokenExpired: 'no-token' }
🔍 AuthContext: No token found, user not authenticated

stdout | src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > claim then complete flow
🏢 API CLIENT: Tenant context cleared (using JWT for tenant context)
🔍 AuthContext: Initializing authentication...
🔍 TokenManager: No token found
🔍 TokenManager: Refresh token info: { hasRefreshToken: false, refreshTokenLength: undefined }
🔍 AuthContext: Token check: { hasToken: false, hasRefreshToken: false, tokenExpired: 'no-token' }
🔍 AuthContext: No token found, user not authenticated

 ❯ |frontend| src/features/workflow/tests/operations/tasks.operations.test.tsx (3) 4144ms
   ❯ Operations / MyTasksPage (2) 4140ms
     × lists tasks (retry x1) 2084ms
     × claim then complete flow (retry x1) 2054ms
   ↓ Operations / MyTasksPage (SKIPPED) (1) [skipped]
     ↓ placeholder – see TODO in file header [skipped]
 ↓ |frontend| src/features/workflow/tests/operations/definitions.operations.test.tsx (1) [skipped]
   ↓ Operations / DefinitionsPage (SKIPPED) (1) [skipped]
     ↓ placeholder – restore real tests after AppTestWrapper is implemented [skipped]

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 2 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  |frontend| src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > lists tasks
TestingLibraryElementError: Unable to find an element with the text: /Approve Request/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="MuiBox-root css-bx44ri"
    >
      <p
        class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
      >
        Please select a tenant to view your tasks
      </p>
    </div>
    <div
      data-testid="tenant-context-probe"
      style="display: none;"
    >
      <span
        data-testid="probe-current-tenant"
      />
      <span
        data-testid="probe-available-count"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-loading"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-error"
      />
      <span
        data-testid="probe-tenant-show-selector"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-redirect"
      >
        0
      </span>
    </div>
  </div>
</body>

Ignored nodes: comments, script, style
<html>
  <head>
    <meta
      content=""
      name="emotion-insertion-point"
    />
  </head>
  <body>
    <div>
      <div
        class="MuiBox-root css-bx44ri"
      >
        <p
          class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
        >
          Please select a tenant to view your tasks
        </p>
      </div>
      <div
        data-testid="tenant-context-probe"
        style="display: none;"
      >
        <span
          data-testid="probe-current-tenant"
        />
        <span
          data-testid="probe-available-count"
        >
          0
        </span>
        <span
          data-testid="probe-tenant-loading"
        >
          0
        </span>
        <span
          data-testid="probe-tenant-error"
        />
        <span
          data-testid="probe-tenant-show-selector"
        >
          0
        </span>
        <span
          data-testid="probe-tenant-redirect"
        >
          0
        </span>
      </div>
    </div>
  </body>
</html>
 ❯ Proxy.waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ src/features/workflow/tests/operations/tasks.operations.test.tsx:29:11
     27|     );
     28|     renderWithProviders(<MyTasksPage />);
     29|     await waitFor(() => {
       |           ^
     30|       expect(screen.getByText(/Approve Request/i)).toBeInTheDocument();
     31|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/4]⎯

 FAIL  |frontend| src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > lists tasks
TestingLibraryElementError: Unable to find an element with the text: /Approve Request/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="MuiBox-root css-bx44ri"
    >
      <p
        class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
      >
        Please select a tenant to view your tasks
      </p>
    </div>
    <div
      data-testid="tenant-context-probe"
      style="display: none;"
    >
      <span
        data-testid="probe-current-tenant"
      />
      <span
        data-testid="probe-available-count"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-loading"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-error"
      />
      <span
        data-testid="probe-tenant-show-selector"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-redirect"
      >
        0
      </span>
    </div>
  </div>
</body>

Ignored nodes: comments, script, style
<html>
  <head>
    <meta
      content=""
      name="emotion-insertion-point"
    />
  </head>
  <body>
    <div>
      <div
        class="MuiBox-root css-bx44ri"
      >
        <p
          class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
        >
          Please select a tenant to view your tasks
        </p>
      </div>
      <div
        data-testid="tenant-context-probe"
        style="display: none;"
      >
        <span
          data-testid="probe-current-tenant"
        />
        <span
          data-testid="probe-available-count"
        >
          0
        </span>
        <span
          data-testid="probe-tenant-loading"
        >
          0
        </span>
        <span
          data-testid="probe-tenant-error"
        />
        <span
          data-testid="probe-tenant-show-selector"
        >
          0
        </span>
        <span
          data-testid="probe-tenant-redirect"
        >
          0
        </span>
      </div>
    </div>
  </body>
</html>
 ❯ Proxy.waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ src/features/workflow/tests/operations/tasks.operations.test.tsx:29:11
     27|     );
     28|     renderWithProviders(<MyTasksPage />);
     29|     await waitFor(() => {
       |           ^
     30|       expect(screen.getByText(/Approve Request/i)).toBeInTheDocument();
     31|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/4]⎯

 FAIL  |frontend| src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > claim then complete flow
 FAIL  |frontend| src/features/workflow/tests/operations/tasks.operations.test.tsx > Operations / MyTasksPage > claim then complete flow
TestingLibraryElementError: Unable to find role="button" and name `/claim/i`

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="MuiBox-root css-bx44ri"
    >
      <p
        class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
      >
        Please select a tenant to view your tasks
      </p>
    </div>
    <div
      data-testid="tenant-context-probe"
      style="display: none;"
    >
      <span
        data-testid="probe-current-tenant"
      />
      <span
        data-testid="probe-available-count"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-loading"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-error"
      />
      <span
        data-testid="probe-tenant-show-selector"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-redirect"
      >
        0
      </span>
    </div>
  </div>
</body>

Ignored nodes: comments, script, style
<body>
  <div>
    <div
      class="MuiBox-root css-bx44ri"
    >
      <p
        class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
      >
        Please select a tenant to view your tasks
      </p>
    </div>
    <div
      data-testid="tenant-context-probe"
      style="display: none;"
    >
      <span
        data-testid="probe-current-tenant"
      />
      <span
        data-testid="probe-available-count"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-loading"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-error"
      />
      <span
        data-testid="probe-tenant-show-selector"
      >
        0
      </span>
      <span
        data-testid="probe-tenant-redirect"
      >
        0
      </span>
    </div>
  </div>
</body>
 ❯ waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ node_modules/@testing-library/dom/dist/query-helpers.js:86:33
 ❯ src/features/workflow/tests/operations/tasks.operations.test.tsx:80:35
     78|
     79|     renderWithProviders(<MyTasksPage />);
     80|     const claimBtn = await screen.findByRole('button', { name: /claim/i });
       |                                   ^
     81|     await userEvent.click(claimBtn);
     82|

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/4]⎯

 Test Files  1 failed | 1 skipped (2)
      Tests  2 failed | 2 skipped (4)
   Start at  15:45:15
   Duration  29.67s (transform 10.44s, setup 331ms, collect 24.23s, tests 4.14s, environment 561ms, prepare 95ms)

PS C:\Users\mccre\dev\boiler\src\frontend\react-app>
